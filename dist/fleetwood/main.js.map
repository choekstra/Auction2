{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/animations.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/can-deactivate-guard.service.ts","webpack:///./src/app/categories/categories-routing.module.ts","webpack:///./src/app/categories/categories.module.ts","webpack:///./src/app/categories/category-detail.component.ts","webpack:///./src/app/categories/category-list.component.ts","webpack:///./src/app/categories/category.service.ts","webpack:///./src/app/compose-message.component.html","webpack:///./src/app/compose-message.component.ts","webpack:///./src/app/dialog.service.ts","webpack:///./src/app/login-routing.module.ts","webpack:///./src/app/login.component.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/selective-preloading-strategy.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./crisis-center/crisis-center.module\": [\n\t\t\"./src/app/crisis-center/crisis-center.module.ts\",\n\t\t\"crisis-center-crisis-center-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { animate, state, style, transition, trigger } from '@angular/animations';\n\n// Component transition animations\nexport const slideInDownAnimation =\n  trigger('routeAnimation', [\n    state('*',\n      style({\n        opacity: 1,\n        transform: 'translateX(0)'\n      })\n    ),\n    transition(':enter', [\n      style({\n        opacity: 0,\n        transform: 'translateX(-100%)'\n      }),\n      animate('0.2s ease-in')\n    ]),\n    transition(':leave', [\n      animate('0.5s ease-out', style({\n        opacity: 0,\n        transform: 'translateY(100%)'\n      }))\n    ])\n  ]);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ComposeMessageComponent } from './compose-message.component';\nimport { PageNotFoundComponent } from './not-found.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\nimport { AuthGuard } from './auth-guard.service';\nimport { SelectivePreloadingStrategy } from './selective-preloading-strategy';\n\n// A special type of Service Module.\n// Available everywhere in the application. \nconst appRoutes: Routes = [\n  {\n    path: 'compose',\n    component: ComposeMessageComponent,\n    outlet: 'popup'\n  },\n /*\n  {\n    path: 'admin',\n    loadChildren: 'app/admin/admin.module#AdminModule',\n    canLoad: [AuthGuard]\n  },\n  */\n  {\n    path: 'crisis-center',\n    loadChildren: './crisis-center/crisis-center.module#CrisisCenterModule',\n    data: { preload: true }\n  },\n  { path: '', redirectTo: '/categorieslist', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n// https://angular.io/api/router/RouterModule\n/* RouterModule can be imported multiple times: once per lazily-loaded bundle. Since the router deals with a global shared resource--location, we cannot have more than one router service active.\n\nThat is why there are two ways to create the module: RouterModule.forRoot and RouterModule.forChild.\n\nforRoot creates a module that contains all the directives, the given routes, and the router service itself.\nforChild creates a module that contains all the directives and the given routes, but does not include the router service.\n*/\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: true, // <-- debugging purposes only\n        preloadingStrategy: SelectivePreloadingStrategy,\n\n      }\n    )\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    CanDeactivateGuard,\n    SelectivePreloadingStrategy\n  ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n// The application shell.\n  @Component({\n    selector: 'app-root',\n\n    template: `\n      <h1 class=\"title\">Angular Router</h1>\n      <nav>\n      <!-- RouterLink directives with one-time binding strings. No route parameters yet.\n       When URL changes, router activates an instance of CrisisListComponent,\n       diplays its view, updates the browser's address location & history \n       with the URL for that path. \n\n       routerLinkActive could be a string of classes: active donut...\n       options:  {exaxt: true} ... active if exact URL match to current URL\n      -->\n\n       <a routerLink=\"/crisis-center\" routerLinkActive=\"active\">Crisis Center</a>\n        <a routerLink=\"/categorieslist\" routerLinkActive=\"active\">List of Categories</a>\n        <a routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n        <a routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n        <a [routerLink]=\"[{ outlets: { popup: ['compose'] } }]\">Contact</a>\n      </nav>\n\n      <!-- RouterOutlet is a directive from the router lib. \n       The router adds <router-outlet> element to DOM, inserts view after.\n       It's where the router swaps views on and off the page. \n      -->\n       <router-outlet></router-outlet>\n      <router-outlet name=\"popup\"></router-outlet>\n    `\n  //templateUrl: './app.component.html',\n  //styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fleetwood Auction';\n}\n","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule }        from '@angular/common/http';\n\nimport { Router } from '@angular/router';\n\nimport { AppComponent }            from './app.component';\nimport { AppRoutingModule }        from './app-routing.module';\n\nimport { CategoriesModule }            from './categories/categories.module';\nimport { ComposeMessageComponent } from './compose-message.component';\nimport { LoginRoutingModule }      from './login-routing.module';\nimport { LoginComponent }          from './login.component';\nimport { PageNotFoundComponent }   from './not-found.component';\n\nimport { DialogService }           from './dialog.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CategoriesModule,\n    LoginRoutingModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    AppComponent,\n    ComposeMessageComponent,\n    LoginComponent,\n    PageNotFoundComponent\n  ],\n  providers: [\n    DialogService\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n  // Diagnostic only: inspect router configuration\n  constructor(router: Router) {\n    console.log('Routes: ', JSON.stringify(router.config, undefined, 2));\n  }\n}\n","import { Injectable }       from '@angular/core';\nimport {\n  CanActivate, Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  CanActivateChild,\n  NavigationExtras,\n  CanLoad, Route\n}                           from '@angular/router';\nimport { AuthService }      from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    return this.checkLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n\n  canLoad(route: Route): boolean {\n    let url = `/${route.path}`;\n\n    return this.checkLogin(url);\n  }\n\n  checkLogin(url: string): boolean {\n    if (this.authService.isLoggedIn) { return true; }\n\n    // Store the attempted URL for redirecting\n    this.authService.redirectUrl = url;\n\n    // Create a dummy session id\n    let sessionId = 123456789;\n\n    // Set our navigation extras object\n    // that contains our global query params and fragment\n    let navigationExtras: NavigationExtras = {\n      queryParams: { 'session_id': sessionId },\n      fragment: 'anchor'\n    };\n\n    // Navigate to the login page with extras\n    this.router.navigate(['/login'], navigationExtras);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n  isLoggedIn = false;\n\n  // store the URL so we can redirect after logging in\n  redirectUrl: string;\n\n  login(): Observable<boolean> {\n    return of(true).pipe(\n      delay(1000),\n      tap(val => this.isLoggedIn = true)\n    );\n  }\n\n  logout(): void {\n    this.isLoggedIn = false;\n  }\n}\n","import { Injectable }    from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable }    from 'rxjs';\n\nexport interface CanComponentDeactivate {\n canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CategoryListComponent }    from './category-list.component';\nimport { CategoryDetailComponent }  from './category-detail.component';\n\nconst categoryRoutes: Routes = [\n  { path: 'categories', redirectTo: '/categorieslist' },\n  { path: 'category/:id', redirectTo: '/categoryid/:id' },\n  { path: 'categorieslist',  component: CategoryListComponent },\n  { path: 'categoryid/:id', component: CategoryDetailComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(categoryRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CategoriesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryListComponent } from './category-list.component';\nimport { CategoryService } from './category.service';\nimport { CategoryDetailComponent } from './category-detail.component';\nimport { CategoriesRoutingModule } from './categories-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule\n  ],\n  declarations: [CategoryListComponent, CategoryDetailComponent],\n  providers: [CategoryService]\n})\nexport class CategoriesModule { }\n","import { switchMap } from 'rxjs/operators';\nimport { Component, OnInit, HostBinding } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { slideInDownAnimation } from '../animations';\n\nimport { Category, CategoryService }  from './category.service';\n\n@Component({\n  template: `\n  <h2>CATEGORIES</h2>\n  <div *ngIf=\"category$ | async as category\">\n    <h3>\"{{ category.name }}\"</h3>\n    <div>\n      <label>Id: </label>{{ category.id }}</div>\n    <div>\n      <label>Name: </label>\n      <input placeholder=\"donut\" />\n    <!--  <input [(ngModel)]=\"category.name\" placeholder=\"name\"/> -->\n    </div>\n    <p>\n      <button (click)=\"gotoCategories(category)\">Back</button>\n    </p>\n  </div>\n  `,\n  animations: [ slideInDownAnimation ]\n})\n\nexport class CategoryDetailComponent implements OnInit {\n\n  @HostBinding('@routeAnimation') routeAnimation = true;\n  @HostBinding('style.display')   display = 'block';\n  @HostBinding('style.position')  position = 'absolute';\n\n  category$: Observable<Category>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: CategoryService\n  ) {}\n\n  ngOnInit() {\n    this.category$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) =>\n        this.service.getCategory(params.get('id')))\n    );\n  }\n\n  gotoCategories(category: Category) {\n    let categoryId = category ? category.id : null;\n    // Pass along the hero id if available\n    // so that the HeroList component can select that hero.\n    // Include a junk 'foo' property for fun.\n    this.router.navigate(['/categories', { id: categoryId, foo: 'foo' }]);\n  }\n}\n\n","// TODO: Feature Componetized like CrisisCenter\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { Category, CategoryService }  from './category.service';\n\n@Component({\n  template: `\n    <h2>CATEGORIES</h2>\n    <ul class=\"items\">\n      <li *ngFor=\"let category of categories$ | async\"\n        [class.selected]=\"category.id === selectedId\">\n        <a [routerLink]=\"['/category', category.id]\">\n          <span class=\"badge\">{{ category.id }}</span>{{ category.name }}\n        </a>\n      </li>\n    </ul>\n\n    <button routerLink=\"/sidekicks\">Go to sidekicks</button>\n  `\n})\nexport class CategoryListComponent implements OnInit {\n  categories$: Observable<Category[]>;\n\n  private selectedId: number;\n\n  constructor(\n    private service: CategoryService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.categories$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        // (+) before `params.get()` turns the string into a number\n        this.selectedId = +params.get('id');\n        return this.service.getCategories();\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport class Category {\n  constructor(public id: number, public name: string) { }\n}\n\nconst CATEGORIES = [\n  new Category(11, 'Business Liquidations'),\n  new Category(12, 'Complete Facility or Surplus Assets'),\n  new Category(13, 'Estate Liquidations'),\n  new Category(14, 'Estimates and Appraisals')\n];\n\n@Injectable()\nexport class CategoryService {\n  getCategories() { return of(CATEGORIES); }\n\n  getCategory(id: number | string) {\n    return this.getCategories().pipe(\n      // (+) before `id` turns the string into a number\n      map(categories => categories.find(category => category.id === +id))\n    );\n  }\n}\n","module.exports = \"<h3>Contact Crisis Center</h3>\\n<div *ngIf=\\\"details\\\">\\n  {{ details }}\\n</div>\\n<div>\\n  <div>\\n    <label>Message: </label>\\n  </div>\\n  <div>\\n    <textarea [(ngModel)]=\\\"message\\\" rows=\\\"10\\\" cols=\\\"35\\\" [disabled]=\\\"sending\\\"></textarea>\\n  </div>\\n</div>\\n<p *ngIf=\\\"!sending\\\">\\n  <button (click)=\\\"send()\\\">Send</button>\\n  <button (click)=\\\"cancel()\\\">Cancel</button>\\n</p>\\n\"","import { Component, HostBinding } from '@angular/core';\nimport { Router }                 from '@angular/router';\n\nimport { slideInDownAnimation }   from './animations';\n\n@Component({\n  templateUrl: './compose-message.component.html',\n  styles: [ ':host { position: relative; bottom: 10%; }' ],\n  animations: [ slideInDownAnimation ]\n})\nexport class ComposeMessageComponent {\n  @HostBinding('@routeAnimation') routeAnimation = true;\n  @HostBinding('style.display')   display = 'block';\n  @HostBinding('style.position')  position = 'absolute';\n\n  details: string;\n  sending = false;\n\n  constructor(private router: Router) {}\n\n  send() {\n    this.sending = true;\n    this.details = 'Sending Message...';\n\n    setTimeout(() => {\n      this.sending = false;\n      this.closePopup();\n    }, 1000);\n  }\n\n  cancel() {\n    this.closePopup();\n  }\n\n  closePopup() {\n    // Providing a `null` value to the named outlet\n    // clears the contents of the named outlet\n    this.router.navigate([{ outlets: { popup: null }}]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Async modal dialog service\n * DialogService makes this app easier to test by faking this service.\n * TODO: better modal implementation that doesn't use window.confirm\n */\n@Injectable()\nexport class DialogService {\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  };\n}\n","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard }            from './auth-guard.service';\nimport { AuthService }          from './auth.service';\nimport { LoginComponent }       from './login.component';\n\nconst loginRoutes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(loginRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    AuthGuard,\n    AuthService\n  ]\n})\nexport class LoginRoutingModule {}\n","import { Component }        from '@angular/core';\nimport { Router,\n         NavigationExtras } from '@angular/router';\nimport { AuthService }      from './auth.service';\n\n@Component({\n  template: `\n    <h2>LOGIN</h2>\n    <p>{{message}}</p>\n    <p>\n      <button (click)=\"login()\"  *ngIf=\"!authService.isLoggedIn\">Login</button>\n      <button (click)=\"logout()\" *ngIf=\"authService.isLoggedIn\">Logout</button>\n    </p>`\n})\nexport class LoginComponent {\n  message: string;\n\n  constructor(public authService: AuthService, public router: Router) {\n    this.setMessage();\n  }\n\n  setMessage() {\n    this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n  }\n\n  login() {\n    this.message = 'Trying to log in ...';\n\n    this.authService.login().subscribe(() => {\n      this.setMessage();\n      if (this.authService.isLoggedIn) {\n        // Get the redirect URL from our auth service\n        // If no redirect has been set, use the default\n        let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/admin';\n\n        // Set our navigation extras object\n        // that passes on our global query params and fragment\n        let navigationExtras: NavigationExtras = {\n          queryParamsHandling: 'preserve',\n          preserveFragment: true\n        };\n\n        // Redirect the user\n        this.router.navigate([redirect], navigationExtras);\n      }\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.setMessage();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  template: '<h2>Page not found</h2>'\n // selector: 'app-page-not-found',\n // templateUrl: './page-not-found.component.html',\n // styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent { // implements OnInit {\n\n // constructor() { }\n\n // ngOnInit() {\n // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class SelectivePreloadingStrategy implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      // add the route path to the preloaded module array\n      this.preloadedModules.push(route.path);\n\n      // log the route path to the console\n      console.log('Preloaded: ' + route.path);\n\n      return load();\n    } else {\n      return of(null);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}